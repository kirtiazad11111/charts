# Default values for kubexray.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

imagePullSecrets:

image:
  repository: kirtiazad11111/kubexray
  # Note that by default we use appVersion to get image tag
  # tag:
  pullPolicy: Always

# Set the Xray config file, it sets access to Xray instance
# The key must be encoded with base64
# e.g. `cat xray_config.yaml | base64`
# It is only used if no existing secret is specified below
xrayConfig: ""

# Specify an existing secret holding the Xray config
existingSecret: ""

networkpolicy:
  # Allows all ingress and egress
  - name: kubexray
    podSelector:
      matchLabels:
        app: kubexray
    egress:
      - {}
    ingress:
      - {}
# Set which user:group you want kubexray to be run with
# kubexray docker image already comes preset with rootless user
securityContext:
  enabled: true
  kubeXrayUserId: 1000
  kubeXrayGroupId: 1000

# Webhook REST API Service
service:
  port: 80
  ## Default type is ClusterIP, to expose externally use LoadBalancer
  ## On minikube use NodePort
  type: ClusterIP
  ## Provide static IP address
  loadBalancerIP:
  ## There are two available options: “Cluster” (default) and “Local”.
  externalTrafficPolicy: Cluster

# Webhook REST API ingress
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # ingress.kubernetes.io/force-ssl-redirect: "true"
    # certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"

  path: /
  hosts:
    - kubexray.example.com
  tls: []
  #  - secretName: kubexray.example.com
  #    hosts:
  #      - kubexray.example.com
# labels:
  # traffic-type: external
  # traffic-type: internal

env:
  logLevel: "INFO"
 # For cron expression https://godoc.org/github.com/robfig/cron#hdr-CRON_Expression_Format
  cron: "0 */2 * * * *"

# Set resources
resources:
  limits:
    cpu: 256m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

# RBAC manifests management
rbac:
  enabled: true

nodeSelector: {}

tolerations: []

affinity: {}

# Enable and set Pod Disruption Budget
podDisruptionBudget:
  enabled: false
  maxUnavailable: 1
  minAvailable: null
